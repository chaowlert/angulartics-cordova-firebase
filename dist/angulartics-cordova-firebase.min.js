!function(window,angular,undefined){"use strict";angular.module("angulartics.cordova.firebase",["angulartics"]).provider("angularticsCordovaFirebase",function(){var angularticsCordovaFirebase=["$q","$log","ready","debug","trackingId","period",function($q,$log,ready,debug,trackingId,period){function success(){debug&&$log.info(arguments)}function failure(err){debug&&$log.error(err)}var deferred=$q.defer(),deviceReady=!1;document.addEventListener("deviceReady",function(){deviceReady=!0,deferred.resolve()},!1),setTimeout(function(){deviceReady||deferred.resolve()},3e3),this.init=function(){return deferred.promise.then(function(){var analytics=window.FirebasePlugin;analytics?ready(analytics,success,failure):debug&&$log.error("Firebase for Cordova is not available")})}}];return{$get:["$injector",function($injector){return $injector.instantiate(angularticsCordovaFirebase,{ready:this._ready||angular.noop,debug:this.debug,trackingId:this.trackingId,period:this.period})}],ready:function(fn){this._ready=fn}}}).config(["$analyticsProvider","angularticsCordovaFirebaseProvider",function($analyticsProvider,angularticsCordovaFirebaseProvider){angularticsCordovaFirebaseProvider.ready(function(analytics,success,failure){$analyticsProvider.registerSetUsername(function(userId){analytics.setUserId(userId)}),$analyticsProvider.registerSetUserProperties(function(properties){for(var key in properties)analytics.setUserProperty(key,properties[key])}),$analyticsProvider.registerPageTrack(function(path){analytics.setScreenName(path)}),$analyticsProvider.registerEventTrack(function(action,properties){analytics.logEvent(action,properties)})})}]).run(["angularticsCordovaFirebase",function(angularticsCordovaFirebase){angularticsCordovaFirebase.init()}])}(window,window.angular);
//# sourceMappingURL=../dist/angulartics-cordova-firebase.min.js.map